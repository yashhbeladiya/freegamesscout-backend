# üöÄ Production CI/CD Pipeline - Using Docker Hub
name: Production Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Build and push to Docker Hub
  build-and-push:
    name: üê≥ Build and Push to Docker Hub
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üîê Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: üì¶ Generate metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/freegamesscout-backend
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest
    
    - name: üê≥ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}

  # Job 2: Deploy to Azure Container Apps
  deploy:
    name: üöÄ Deploy to Azure
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    
    steps:
    - name: üîê Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: üöÄ Deploy to Container Apps
      env:
        MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      run: |
        # Configuration
        RESOURCE_GROUP="freegamesscout-rg"
        LOCATION="eastus"
        ENVIRONMENT_NAME="freegamesscout-env"
        APP_NAME="freegamesscout-backend"
        
        # Register required providers
        echo "Registering Azure providers..."
        az provider register --namespace Microsoft.App --wait
        az provider register --namespace Microsoft.OperationalInsights --wait
        
        # Create resource group
        echo "Creating resource group..."
        az group create --name "${RESOURCE_GROUP}" --location "${LOCATION}" || true
        
        # Create Log Analytics workspace
        echo "Creating Log Analytics workspace..."
        WORKSPACE_NAME="freegamesscout-logs"
        az monitor log-analytics workspace create \
          --resource-group "${RESOURCE_GROUP}" \
          --workspace-name "${WORKSPACE_NAME}" \
          --location "${LOCATION}" || true
        
        # Get workspace credentials
        WORKSPACE_ID=$(az monitor log-analytics workspace show \
          --resource-group "${RESOURCE_GROUP}" \
          --workspace-name "${WORKSPACE_NAME}" \
          --query customerId -o tsv)
        
        WORKSPACE_KEY=$(az monitor log-analytics workspace get-shared-keys \
          --resource-group "${RESOURCE_GROUP}" \
          --workspace-name "${WORKSPACE_NAME}" \
          --query primarySharedKey -o tsv)
        
        # Create Container App Environment
        echo "Creating Container App Environment..."
        az containerapp env create \
          --name "${ENVIRONMENT_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --location "${LOCATION}" \
          --logs-workspace-id "${WORKSPACE_ID}" \
          --logs-workspace-key "${WORKSPACE_KEY}" || true
        
        # Deploy container app (public image from Docker Hub)
        echo "Deploying Container App..."
        az containerapp create \
          --name "${APP_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --environment "${ENVIRONMENT_NAME}" \
          --image "docker.io/${DOCKERHUB_USERNAME}/freegamesscout-backend:latest" \
          --target-port 3000 \
          --ingress 'external' \
          --env-vars \
            "MONGO_CONNECTION_STRING=${MONGO_CONNECTION_STRING}" \
            "NODE_ENV=production" \
          --cpu 0.5 \
          --memory 1 \
          --min-replicas 1 \
          --max-replicas 3 \
          || \
        az containerapp update \
          --name "${APP_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --image "docker.io/${DOCKERHUB_USERNAME}/freegamesscout-backend:latest"
    
    - name: üåê Get deployment URL
      run: |
        APP_NAME="freegamesscout-backend"
        RESOURCE_GROUP="freegamesscout-rg"
        
        APP_URL=$(az containerapp show \
          --name "${APP_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --query "properties.configuration.ingress.fqdn" \
          --output tsv)
        
        echo "‚úÖ Deployment successful!"
        echo "üåê Your API is available at: https://${APP_URL}"