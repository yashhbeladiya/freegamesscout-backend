# üöÄ Production CI/CD Pipeline - Direct Azure Deployment
name: Production Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Build and push Docker image
  build-and-push:
    name: üê≥ Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üîê Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: üîê Login to Azure Container Registry
      run: |
        # Create ACR if it doesn't exist
        ACR_NAME="freegamesscoutacr"
        RESOURCE_GROUP="freegamesscout-rg"
        
        # Create resource group
        az group create --name "${RESOURCE_GROUP}" --location eastus || true
        
        # Create ACR
        az acr create --name "${ACR_NAME}" --resource-group "${RESOURCE_GROUP}" --sku Basic || true
        
        # Login to ACR
        az acr login --name "${ACR_NAME}"
        
        echo "ACR_LOGIN_SERVER=${ACR_NAME}.azurecr.io" >> $GITHUB_ENV
    
    - name: üì¶ Generate metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.ACR_LOGIN_SERVER }}/freegamesscout-backend
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest
    
    - name: üê≥ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}

  # Job 2: Deploy to Azure Container Apps
  deploy:
    name: üöÄ Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    
    steps:
    - name: üîê Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: üöÄ Deploy to Container Apps
      env:
        MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
      run: |
        # Configuration
        RESOURCE_GROUP="freegamesscout-rg"
        LOCATION="eastus"
        ACR_NAME="freegamesscoutacr"
        ENVIRONMENT_NAME="freegamesscout-env"
        APP_NAME="freegamesscout-backend"
        
        # Ensure resource group exists
        az group create --name "${RESOURCE_GROUP}" --location "${LOCATION}" || true
        
        # Create Container App Environment if it doesn't exist
        echo "Creating Container App Environment..."
        az containerapp env create \
          --name "${ENVIRONMENT_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --location "${LOCATION}" || true
        
        # Get ACR credentials
        ACR_USERNAME=$(az acr credential show --name "${ACR_NAME}" --query "username" -o tsv)
        ACR_PASSWORD=$(az acr credential show --name "${ACR_NAME}" --query "passwords[0].value" -o tsv)
        
        # Deploy or update the container app
        echo "Deploying Container App..."
        az containerapp create \
          --name "${APP_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --environment "${ENVIRONMENT_NAME}" \
          --image "${ACR_NAME}.azurecr.io/freegamesscout-backend:latest" \
          --target-port 3000 \
          --ingress 'external' \
          --registry-server "${ACR_NAME}.azurecr.io" \
          --registry-username "${ACR_USERNAME}" \
          --registry-password "${ACR_PASSWORD}" \
          --env-vars \
            "MONGO_CONNECTION_STRING=secretref:mongo-connection" \
            "NODE_ENV=production" \
          --secrets \
            "mongo-connection=${MONGO_CONNECTION_STRING}" \
          --cpu 0.5 \
          --memory 1 \
          --min-replicas 1 \
          --max-replicas 3 \
          || \
        az containerapp update \
          --name "${APP_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --image "${ACR_NAME}.azurecr.io/freegamesscout-backend:latest" \
          --set-env-vars \
            "MONGO_CONNECTION_STRING=secretref:mongo-connection" \
            "NODE_ENV=production" \
          --replace-secrets \
            "mongo-connection=${MONGO_CONNECTION_STRING}"
    
    - name: üåê Get deployment URL
      run: |
        APP_NAME="freegamesscout-backend"
        RESOURCE_GROUP="freegamesscout-rg"
        
        APP_URL=$(az containerapp show \
          --name "${APP_NAME}" \
          --resource-group "${RESOURCE_GROUP}" \
          --query "properties.configuration.ingress.fqdn" \
          --output tsv)
        
        echo "‚úÖ Deployment successful!"
        echo "üåê Your API is available at: https://${APP_URL}"
        echo "üìä Check application logs with: az containerapp logs show -n ${APP_NAME} -g ${RESOURCE_GROUP}"